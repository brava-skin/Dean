name: Populate Historical Performance Data

on:
  workflow_dispatch: # Allow manual runs
  schedule:
    # Run once daily at 10 AM UTC to update historical data
    - cron: '0 10 * * *'

jobs:
  populate-historical-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        echo "üì¶ Installing Python dependencies..."
        echo "üíæ Using cached dependencies when available"
        python -m pip install --upgrade pip
        pip install --cache-dir ~/.cache/pip -r dean/requirements.txt
        echo "‚úÖ Dependencies installed successfully"
        
    - name: Populate Historical Performance Data
      env:
        # Meta Ads API Configuration
        FB_APP_ID: ${{ secrets.FB_APP_ID }}
        FB_APP_SECRET: ${{ secrets.FB_APP_SECRET }}
        FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
        FB_AD_ACCOUNT_ID: ${{ secrets.FB_AD_ACCOUNT_ID }}
        FB_PIXEL_ID: ${{ secrets.FB_PIXEL_ID }}
        FB_PAGE_ID: ${{ secrets.FB_PAGE_ID }}
        IG_ACTOR_ID: ${{ secrets.IG_ACTOR_ID }}
        
        # Business Configuration
        STORE_URL: ${{ secrets.STORE_URL }}
        BREAKEVEN_CPA: ${{ secrets.BREAKEVEN_CPA }}
        COGS_PER_PURCHASE: ${{ secrets.COGS_PER_PURCHASE }}
        USD_EUR_RATE: ${{ secrets.USD_EUR_RATE }}
        
        # Timezone
        TZ: Europe/Amsterdam
        
      run: |
        echo "üìä Populating Historical Performance Data..."
        echo "üìÖ Fetching data from October 9, 2024 to present"
        echo ""
        
        # Change to dean directory where config files are located
        cd dean
        
        # Run the historical data population script
        python scripts/populate_historical_performance.py
        
        echo ""
        echo "‚úÖ Historical performance data population completed"
        
    - name: Commit and Push Changes
      run: |
        echo "üìù Committing updated CSV file..."
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the updated CSV file
        git add data/daily_performance_tracking.csv
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "‚ÑπÔ∏è No changes to commit"
        else
          # Commit the changes
          git commit -m "feat: Update daily performance tracking with historical data

          HISTORICAL DATA UPDATE:
          - Fetched performance data from Meta API
          - Updated daily_performance_tracking.csv
          - Populated data from October 9, 2024 onwards
          - All metrics calculated and derived
          
          This update ensures the CSV file contains
          comprehensive historical performance data
          for analysis and trend tracking."
          
          # Push the changes
          git push origin main
          echo "‚úÖ Changes committed and pushed to main branch"
        fi
        
    - name: Summary
      run: |
        echo ""
        echo "üìä HISTORICAL DATA POPULATION SUMMARY"
        echo "======================================"
        echo "‚úÖ Historical performance data has been populated"
        echo "üìÅ CSV file: data/daily_performance_tracking.csv"
        echo "üìÖ Date range: October 9, 2024 to present"
        echo "üìà Metrics: Financial, traffic, conversion, and ML metrics"
        echo "üîÑ Next run: Daily at 10 AM UTC"
        echo ""
        echo "üí° You can now use the analysis script to review performance:"
        echo "   python scripts/analyze_performance.py --charts"
