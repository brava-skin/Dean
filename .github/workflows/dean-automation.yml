name: Dean Automation (Smart Scheduler)

on:
  schedule:
    # Run every hour at minute 0 with American timezone optimization
    # Peak hour avoidance: 9-11 AM and 2-4 PM EST
    # Sleep hour optimization: 2-6 AM EST
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      mode:
        description: 'Run mode'
        required: false
        default: 'single'
        type: choice
        options:
        - single
        - background
      stage:
        description: 'Stage to run (single mode only)'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - testing
        - validation
        - scaling

jobs:
  dean-automation:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd dean
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Dean Automation
      env:
        # Meta API Credentials
        FB_APP_ID: ${{ secrets.FB_APP_ID }}
        FB_APP_SECRET: ${{ secrets.FB_APP_SECRET }}
        FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
        FB_AD_ACCOUNT_ID: ${{ secrets.FB_AD_ACCOUNT_ID }}
        FB_PIXEL_ID: ${{ secrets.FB_PIXEL_ID }}
        FB_PAGE_ID: ${{ secrets.FB_PAGE_ID }}
        
        # Optional: Instagram
        IG_ACTOR_ID: ${{ secrets.IG_ACTOR_ID }}
        
        # Store Configuration
        STORE_URL: ${{ secrets.STORE_URL }}
        
        # Slack Notifications (all messages go to one channel by default)
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        # Optional: Route different message types to different channels
        # SLACK_WEBHOOK_ALERTS: ${{ secrets.SLACK_WEBHOOK_ALERTS }}
        # SLACK_WEBHOOK_DIGEST: ${{ secrets.SLACK_WEBHOOK_DIGEST }}
        # SLACK_WEBHOOK_SCALE: ${{ secrets.SLACK_WEBHOOK_SCALE }}
        
        # Optional: Supabase
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        SUPABASE_TABLE: ${{ secrets.SUPABASE_TABLE }}
        
        # Optional: Economics
        BREAKEVEN_CPA: ${{ secrets.BREAKEVEN_CPA }}
        COGS_PER_PURCHASE: ${{ secrets.COGS_PER_PURCHASE }}
        USD_EUR_RATE: ${{ secrets.USD_EUR_RATE }}
        
        # Timezone
        TIMEZONE: ${{ secrets.TIMEZONE || 'Europe/Amsterdam' }}
        
      run: |
        cd dean
        
        # Check if running in background mode
        if [ "${{ github.event.inputs.mode }}" == "background" ]; then
          echo "ü§ñ Starting background monitoring mode..."
          echo "‚ö†Ô∏è Note: Background mode is designed for long-running processes"
          echo "‚ö†Ô∏è GitHub Actions has a 6-hour limit, so this will run for up to 6 hours"
          echo "üîÑ For continuous monitoring, consider using a VPS or cloud service"
          python start_background.py
        else
          # Smart tick execution with American timezone optimization
          echo "üá∫üá∏ Smart tick with American timezone optimization..."
          echo "üïê Peak hour avoidance: 9-11 AM and 2-4 PM EST"
          echo "üò¥ Sleep hour optimization: 2-6 AM EST"
          echo "üß† Advanced features: duplicate prevention, smart retries, health monitoring"
          
          # Single run mode (existing behavior)
          if [ "${{ github.event.inputs.stage }}" == "testing" ]; then
            echo "üîÑ Running Testing stage..."
            python src/main.py --stage testing --profile production
          elif [ "${{ github.event.inputs.stage }}" == "validation" ]; then
            echo "üîÑ Running Validation stage..."
            python src/main.py --stage validation --profile production
          elif [ "${{ github.event.inputs.stage }}" == "scaling" ]; then
            echo "üîÑ Running Scaling stage..."
            python src/main.py --stage scaling --profile production
          else
            echo "üîÑ Running All stages with smart scheduler..."
            python src/main.py --profile production
          fi
        fi

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dean-logs-${{ github.run_number }}
        path: dean/data/
        retention-days: 7

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Dean automation failed"
        # You can add Slack notification here if needed

    - name: Background Mode Warning
      if: github.event.inputs.mode == 'background'
      run: |
        echo "‚ö†Ô∏è IMPORTANT: GitHub Actions is not ideal for background monitoring"
        echo "üìã Limitations:"
        echo "  ‚Ä¢ 6-hour maximum runtime"
        echo "  ‚Ä¢ No persistent storage between runs"
        echo "  ‚Ä¢ Limited to scheduled triggers"
        echo ""
        echo "üöÄ Recommended alternatives for production:"
        echo "  ‚Ä¢ VPS with systemd service"
        echo "  ‚Ä¢ AWS EC2 with auto-scaling"
        echo "  ‚Ä¢ Google Cloud Run (serverless)"
        echo "  ‚Ä¢ DigitalOcean Droplet"
        echo "  ‚Ä¢ Railway/Render deployment"
        echo ""
        echo "üìñ See BACKGROUND_MONITORING.md for deployment guides"
