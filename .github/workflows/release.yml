name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## ðŸš€ Dean Release ${{ github.ref_name }}
          
          ### What's New:
          - Automated dependency updates
          - Security patches and improvements
          - Performance optimizations
          - Bug fixes
          
          ### Installation:
          ```bash
          pip install dean==${{ github.ref_name }}
          ```
          
          ### Documentation:
          - [Installation Guide](docs/INSTALLATION.md)
          - [Configuration Guide](docs/CONFIGURATION.md)
          - [Usage Guide](docs/USAGE.md)
          - [API Reference](docs/API_REFERENCE.md)
          - [Troubleshooting](docs/TROUBLESHOOTING.md)
          
          ### Changes:
          See the [changelog](CHANGELOG.md) for detailed changes.
          
          ---
          *This release was created automatically by the release workflow.*
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/
        asset_name: dean-${{ github.ref_name }}-dist
        asset_content_type: application/zip

    - name: Publish to PyPI (if configured)
      if: env.PYPI_TOKEN
      run: |
        twine upload dist/* --username __token__ --password ${{ secrets.PYPI_TOKEN }}
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

    - name: Notify on Slack
      if: env.SLACK_WEBHOOK_URL
      run: |
        curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"ðŸš€ Dean ${{ github.ref_name }} Released: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}\"}" \
          ${{ env.SLACK_WEBHOOK_URL }}
