version: 1.0
env: prod
audit:
  last_changed_at: "2025-10-08T00:00:00Z"
  last_changed_by: "you@company.com"
  changelog: |
    - Switch account to Europe/Amsterdam timezone and EUR currency.
    - Enable USD→EUR FX for tripwire checks (uses env USD_EUR_RATE if present).
    - Add explicit timezones (account vs audience) and reporting digest tz.
    - Clarify launch defer uses account local time; all spend/caps/CPA/ROAS thresholds are in EUR.

timezones:
  account_tz: "Europe/Amsterdam"
  audience_tz: "America/Chicago"

windows:
  day_1: {days: 1}
  day_3: {days: 3}
  day_7: {days: 7}
  last_48h: {hours: 48}
  week_to_date: {wtd: true}
  month_to_date: {mtd: true}

attribution:
  click_days: 7
  view_days: 1
  roas_source: "computed"

minimums:
  min_impressions: 300
  min_clicks: 0
  min_spend: 10   # EUR

stability:
  consecutive_ticks: 2
  smoothing_epsilon: 0.0

thresholds:
  ctr:
    testing_floor: 0.008
    validation_floor: 0.010
  cpa:              # EUR
    testing_max: 36
    validation_max: 28
    scaling_kill_max: 40
  roas:
    testing_min: 1.5
    validation_min: 1.8
    scaling_kill_min: 1.2
  poas:
    validation_min: 0.0
    scaling_min: 0.2
  aov:
    validation_min: null

testing:
  minimums:
    min_impressions: 300
    min_spend: 10   # EUR
  kill:
    - {type: "spend_no_purchase", spend_gte: 32}                          # EUR
    - {type: "ctr_below", ctr_lt: 0.008, spend_gte: 30}                   # EUR
    - {type: "spend_no_atc", spend_gte: 50}                               # EUR
    - {type: "spend_multi_atc_no_purchase", spend_gte: 70, atc_gte: 2}    # EUR
    - {type: "roas_below_after_days", roas_lt: 1.5, window: "day_3"}
    - {type: "cpa_gte_over_days", cpa_gte: 34, days: 3}                   # EUR
    - {type: "spend_over_2x_price_no_purchase"}                           # uses economics.fx for USD→EUR
  advance:
    operator: "all"
    rules:
      - {type: "purchase_gte", purchases_gte: 1}
      - {type: "cpa_lte", cpa_lte: 36}                                     # EUR
      - {type: "ctr_gte", ctr_gte: 0.008}

validation:
  minimums:
    min_impressions: 600
    min_clicks: 30
    min_spend: 40   # EUR
  kill:
    - {type: "spend_no_purchase", spend_gte: 40}                          # EUR
    - {type: "cpa_gte", cpa_gte: 32}                                      # EUR
    - {type: "ctr_below", ctr_lt: 0.008, spend_gte: 40}                   # EUR
    - {type: "spend_multi_atc_no_purchase", spend_gte: 80, atc_gte: 2}    # EUR
    - {type: "roas_below_after_days", roas_lt: 1.5, window: "day_3"}
    - {type: "spend_over_2x_price_no_purchase"}                           # uses economics.fx for USD→EUR
  advance:
    operator: "all"
    rules:
      - {type: "purchase_gte", purchases_gte: 2}
      - {type: "cpa_lte", cpa_lte: 28}                                     # EUR
      - {type: "roas_gte", roas_gte: 1.8}
      - {type: "ctr_gte", ctr_gte: 0.01}
  strictness:
    min_days_with_purchase: 2

scaling:
  minimums:
    min_impressions: 1000
    min_clicks: 50
    min_spend: 50   # EUR
  kill:
    - {type: "cpa_gte_consecutive_days", cpa_gte: 40, days: 2}             # EUR
    - {type: "roas_lt_over_days", roas_lt: 1.2, days: 3}
    - {type: "spend_no_purchase", spend_gte: 150}                          # EUR
  scale_up:
    cooldown_hours: 24
    hysteresis:
      roas_down_band: 1.7
      cpa_up_band: 33
    steps:
      - {type: "cpa_lte_and_roas_gte_over_days", cpa_lte: 27, roas_gte: 2.0, days: 2, budget_increase_pct: [50, 100]}
      - {type: "cpa_lte_and_roas_gte_over_days", cpa_lte: 22, roas_gte: 3.0, days: 2, budget_increase_pct: [100, 200]}
  duplicate_on_fire:
    max_duplicates_per_24h: 3
    rules:
      - {type: "purchases_in_day", purchases_gte: 5, cpa_lte: 27, duplicates: 2, budget_each: 150}  # EUR

pacing:
  spend_velocity:
    growth_pct_24h_warn: 150
    growth_pct_48h_warn: 250
    freeze_scaling_if_exceeds: true
  daily_stage_caps:   # EUR
    testing: 100
    validation: 400
    scaling: 2500

safety_nets:
  cut_budget_if_cpa_worse:
    - {type: "cpa_over_days", cpa_gt: 33, days: 2, cut_pct: 50}            # EUR
  stop_if_two_failed_scales:
    - {type: "consecutive_scale_failures", count: 2}
  account:
    pause_scaling_if_account_cpa_high:
      enabled: true
      factor_over_breakeven: 1.5
      days: 2
    no_purchases_tripwire_hours: 48

queue_policies:
  keep_active_ads: 4
  fairness:
    min_spend_per_ad_before_kill: 20   # EUR
  launch_defer:
    defer_after_hour_local: 18         # 18:00 in account_tz (Europe/Amsterdam)

naming:
  enforce: true
  patterns:
    campaign:
      - "^\[(TEST|VALID|SCALE|SCALE-CBO)\]\s+Brava\s+—\s+(ABO|CBO)\s+—\s+US Men$"
    adset:
      - "^\[(TEST|VALID|SCALE)\]\s+.+$"
    ad:
      - "^\[(TEST|VALID|SCALE)\]\s+.+$"
  warn_on_mismatch: true
  auto_prefix_if_missing: true

creative_compliance:
  require_fields: ["primary_text", "headline"]
  forbid_terms: ["cures", "miracle", "guaranteed"]
  require_utm: false

reporting:
  reason_detail: "full"
  digest:
    enabled: true
    time_local: "08:30"
    tz: "Europe/Amsterdam"
  logs:
    json_log_enabled: true
    json_log_path: "data/actions.log.jsonl"

economics:
  currency: "EUR"            # Account currency
  use_env_cogs: true
  use_creative_cogs: false
  fx:
    enabled: true            # Enable for USD product price → EUR spend tripwire
    base_product_currency: "USD"
    account_currency: "EUR"
    env_rate_var: "USD_EUR_RATE"   # if unset, default_rate is used
    default_rate: 0.92

data_quality:
  missing_actions_alert:
    enabled: true
    min_spend_for_alert: 20   # EUR
  tracking_drop_alert:
    enabled: true
    drop_pct_vs_7d_avg: 60

mode:
  current: "production"
  staging:
    disable_writes: true
    relax_thresholds: true
  production:
    disable_writes: false
    relax_thresholds: false

redistribution:
  on_pause_winner_reinvest: true
  strategy: "proportional_to_roas"
  min_increment_per_winner: 10   # EUR

